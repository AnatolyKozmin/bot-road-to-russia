from aiogram import F, types, Router
from aiogram.filters import CommandStart, Command, or_f
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext

from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select

from db.models import Users
from db.models import MessagesForUsers

from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from db.engine import session_maker


user_router = Router()

class GetUserCode(StatesGroup):
    code = State()

@user_router.message(CommandStart())
async def start_cmd(message: types.Message, state: FSMContext):
    if message.from_user.username is None:
        await message.answer(
            "–ü—Ä–∏–≤–µ—Ç, —É —Ç–µ–±—è –∑–∞–∫—Ä—ã—Ç–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram. –û—Ç–∫—Ä–æ–π –µ–≥–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞."
        )
    else:
        await message.answer(
            "–ü—Ä–∏–≤–µ—Çüëã\n–ú–µ–Ω—è –∑–æ–≤—É—Ç –†—É—Å—å, —è –±—É–¥—É —Ç–≤–æ–∏–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º –Ω–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ ¬´–î–æ—Ä–æ–≥–∞ –≤ –†–æ—Å—Å–∏—é¬ªüß°\n\n"
            "–ù–∞–ø–∏—à–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–π –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä\n\n"
            "P.S –û–Ω –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ç–µ–±–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ï—Å–ª–∏ –≤–¥—Ä—É–≥ –ø–æ –∫–∞–∫–∏–º-—Ç–æ –ø—Ä–∏—á–∏–Ω–∞–º —Ç—ã –µ–≥–æ –Ω–µ –ø–æ–ª—É—á–∏–ª, —Å–æ–æ–±—â–∏ –æ–± —ç—Ç–æ–º @AnnaLastochka20 –∏ –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è —Å—é–¥–∞."
        )
        await state.set_state(GetUserCode.code)

@user_router.message(GetUserCode.code)
async def process_code(message: types.Message, state: FSMContext, session: AsyncSession):
    code = message.text.strip()
    result = await session.execute(
        select(MessagesForUsers).where(MessagesForUsers.code == code)
    )
    messages = result.scalars().all()

    if not messages:
        await message.answer("–ö–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—É @AnnaLastochka20.")
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    user_result = await session.execute(
        select(Users).where(Users.tg_id == message.from_user.id)
    )
    user_obj = user_result.scalar_one_or_none()
    if not user_obj:
        user = Users(
            tg_id=message.from_user.id,
            tg_username=message.from_user.username
        )
        session.add(user)
        await session.commit()

    # –í—ã–≤–æ–¥–∏–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–∫–∞–∂–¥–æ–µ ‚Äî –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º)
    for msg in messages:
        await message.answer(msg.text_for_message)

    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–Ω–æ–ø–∫–∞ "–í—Å—Ç—Ä–µ—á–∞" ‚Äî —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
    formatted_text = (
        "<b>1. –°–µ–π—á–∞—Å —Ç–µ–±–µ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:</b>\n\n"
        "–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–≤–æ–µ–º—É –¥—Ä—É–≥—É —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n"
        "<i>¬´–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äì —Ç–≤–æ–π —Ä—É—Å—Å–∫–∏–π –¥—Ä—É–≥ –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞ ¬´–î–æ—Ä–æ–≥–∞ –≤ –†–æ—Å—Å–∏—é¬ª. –ú–µ–Ω—è –∑–æ–≤—É—Ç <b>–∏–º—è</b>, —è —É—á—É—Å—å –≤ <b>–∫–∞–∫–æ–º —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ</b> –Ω–∞ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–µ <b>–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</b>. –î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è) –ü–æ–¥—Å–∫–∞–∂–∏, <b>–æ–¥–∏–Ω –∏–∑ –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–∏–∂–µ</b>.\n\n"
        "2. –ü–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ —Å–≤–æ–∏–º –¥—Ä—É–≥–æ–º –æ–Ω–ª–∞–π–Ω, –∑–∞–¥–∞–≤ —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã:</i>\n"
        "‚Ä¢ –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?\n"
        "‚Ä¢ –ò–∑ –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω—ã —Ç—ã –ø—Ä–∏–µ—Ö–∞–ª –∏ –∫–∞–∫ –¥–∞–≤–Ω–æ?\n"
        "‚Ä¢ –ö–∞–∫–∏–µ —è–∑—ã–∫–∏ —Ç—ã –∑–Ω–∞–µ—à—å?\n"
        "‚Ä¢ –í –∫–∞–∫–æ–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç —Ç—ã —Å–æ–±–∏—Ä–∞–µ—à—å—Å—è –ø–æ—Å—Ç—É–ø–∞—Ç—å –∏ –Ω–∞ –∫–∞–∫–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ?\n"
        "‚Ä¢ –ö–∞–∫–∏–µ —É —Ç–µ–±—è —Ö–æ–±–±–∏?\n"
        "‚Ä¢ –ü–æ—á–µ–º—É —Ç—ã –≤—ã–±—Ä–∞–ª –†–æ—Å—Å–∏—é –¥–ª—è –æ–±—É—á–µ–Ω–∏—è?\n\n"
        "<i>–°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏–º–µ—Ä–Ω—ã–º –∏ –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ –Ω–∞ –ø–µ—Ä–≤–æ–º —ç—Ç–∞–ø–µ.</i>\n\n"
        "–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–≤–æ–µ–º—É –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–º—É –¥—Ä—É–≥—É —É–≤–∏–¥–µ—Ç—å—Å—è –≤–∂–∏–≤—É—é –∏ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –ø–æ–±–ª–∏–∂–µ.\n\n"
        "<b>–ù–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–≥–æ —ç—Ç–∞–ø–∞ —É —Ç–µ–±—è –µ—Å—Ç—å 2 –¥–Ω—è —Å –º–æ–º–µ–Ω—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.</b>\n\n"
        "–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã —Å–æ —Å–≤–æ–∏–º –¥—Ä—É–≥–æ–º –Ω–∞–ª–∞–¥–∏—Ç–µ –ø–µ—Ä–≤–∏—á–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç –∏ –ø—Ä–∏–º–∏—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –æ –≤—Å—Ç—Ä–µ—á–µ, –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è —Å—é–¥–∞ –∏ –≤—ã–±–∏—Ä–∞–π –≤ –º–µ–Ω—é ¬´–í—Å—Ç—Ä–µ—á–∞¬ª.\n\n"
        "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –ø—Ä–æ–≥—É–ª–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ (–ø–∞—Ä–∫/–º—É–∑–µ–π/–≤—ã—Å—Ç–∞–≤–∫–∞/–≥–∞—Å—Ç—Ä–æ –º–µ—Å—Ç–∞/–∏–Ω–æ–µ) –∏ –±—é–¥–∂–µ—Ç–∞ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ/–¥–æ 500 —Ä—É–±–ª–µ–π/1000 —Ä—É–±–ª–µ–π)."
    )
    meet_kb = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="–í—Å—Ç—Ä–µ—á–∞")]],
        resize_keyboard=True
    )
    await message.answer(formatted_text, parse_mode="HTML", reply_markup=meet_kb)
    await state.clear()

    
@user_router.message(F.text == "–í—Å—Ç—Ä–µ—á–∞")
async def meet_handler(message: types.Message):
    await message.answer(
        "–£ —Ç–µ–±—è –µ—Å—Ç—å 2 –¥–Ω—è –Ω–∞ —Ç–æ, —á—Ç–æ–±—ã –Ω–∞–ª–∞–¥–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç —Å –º–æ–º–µ–Ω—Ç–∞ –≤–≤–æ–¥–∞ –∫–æ–¥–∞!\n\n"
        "–ü–æ—Å–ª–µ 2 –¥–Ω–µ–π –∑–¥–µ—Å—å –ø–æ—è–≤—è—Ç—Å—è –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è –≤—Å—Ç—Ä–µ—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Å–æ–±—Ä–∞–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ–±—è.\n\n" \
        "–ï—Å–ª–∏ –≤–¥—Ä—É–≥ —á—Ç–æ-—Ç–æ –∏–¥—ë—Ç –Ω–µ —Ç–∞–∫, —Ç–æ –Ω–∞–∂–º–∏ –Ω–∞  /start –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞"
    )